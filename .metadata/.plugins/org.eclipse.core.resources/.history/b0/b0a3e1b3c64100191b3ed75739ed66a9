package dataStructures;

import java.util.NoSuchElementException;

public class BinaryTree<T>
{
	private TreeNode<T> root;
	
	public int height()
	{
		if(root == null)
			return 0;
		return root.depth();
	}
	
	public void printInorder()
	{
		if(root != null)
			root.visitInorder(e -> System.out.print(e));
		System.out.println();
	}

	public void printPreorder()
	{
		if(root != null)
			root.visitPreorder(e -> System.out.print(e));
		System.out.println();
	}

	public void printPostorder()
	{
		if(root != null)
			root.visitPostorder(e -> System.out.print(e));
		System.out.println();
	}
	
	public void printBreadthFirst()
	{
		int height = height();
		for(int i=0; i<height; i++)
		{
			printGivenLevel(i);
		}
		System.out.println();
	}
	
	public void printGivenLevel(int level)
	{
		LinkedListQueue<T> queue = getLevel(level);
		try
		{
			System.out.print(queue.dequeue());
		}
		catch(NoSuchElementException e) {}
	}
	
	public LinkedListQueue<T> getLevel(int level)
	{
		if(root == null)
			return new LinkedListQueue<>();
		return root.getLevelDown(level);
	}
	
	public void printBreadthFirstQ()
	{
		
	}
}
